---
title: "SCIE-PANC"
params: 
  root: "~/Documents/SCIE-PANC/Data/hg38/"
format: html
editor: visual
---

Bulk RNA analysis in the SCIE-PANC project investigating the tumor microenvironment in pancreatic adenocarcinoma

## Data and libraries initialization

```{r}
#| message: false
library(reshape2)
library(ggplot2)
library(DESeq2)
library(tidyverse)
library(biomaRt)
library(ggfortify)
library(pheatmap)
library(multideconv)
library(dplyr)
library(stringr)
library(igraph)
library(viper)
library(ggraph)
library(mixOmics)
library(ggrepel)
library(clusterProfiler)
library(patchwork)
devtools::load_all("~/Documents/SCIE-PANC/CellTFusion-main")
library(OmnipathR)
library(caret)
source("functions.R")
```

Download the data

```{r}
file_list <- list.files(path = params$root, 
                        pattern = "_htseq_count_all.txt$", 
                        full.names = TRUE, 
                        recursive = TRUE)

length(file_list)
```

Clinical data

```{r}
clinical<-read.csv("clinical_data.csv")
conversion_id<-read.csv("COMPASS_PSCI_ID.csv")
clinical$Subject <- sub("^COMP", "COMP-", clinical$Subject)
clinical<-merge(conversion_id, clinical, by.x="COMPASS.ID", by.y="Subject")
clinical$Metastatic.Disease.<-tolower(clinical$Metastatic.Disease.)
clinical$First.Tx.Backbone <- ifelse(clinical$First.Tx.Backbone == "GA "|clinical$First.Tx.Backbone == "GA  ", "GA", clinical$First.Tx.Backbone)
clinical$First.Tx.Backbone <- ifelse(clinical$First.Tx.Backbone == "FFX ", "FFX", clinical$First.Tx.Backbone)
clinical$First.Tx.Backbone <- ifelse(clinical$First.Tx.Backbone == "None", "none", clinical$First.Tx.Backbone)
clinical$First.Tx.Backbone <- ifelse(clinical$First.Tx.Backbone == "cisplatin/gemcitabine", "cis/gem", clinical$First.Tx.Backbone)
clinical$Sum.Diameter <- as.numeric(clinical$Sum.Diameter)
clinical$Best.tumor.response <- as.numeric(clinical$Best.tumor.response)
clinical$Ca.19.9.Value.baseline <- as.numeric(clinical$Ca.19.9.Value.baseline)
clinical$survival.days <- as.numeric(clinical$survival.days)
clinical$Best.Response<-ifelse(clinical$Best.response.1st.line == "CR"|clinical$Best.response.1st.line == "PR", "Response", "No response")
```

Name the column by patient numero and genes column

```{r}
get_prefix <- function(file_path){
  fname <- basename(file_path)
  prefix <- sub("^([^_]+_[^_]+).*", "\\1", fname)
  return(prefix)
}

expr_list <- lapply(file_list, function(f){
  df <- read.table(f, header = TRUE, sep = "\t", stringsAsFactors = FALSE)
  colnames(df)[1] <- "Genes"
  prefix <- get_prefix(f)
  colnames(df)[2] <- prefix
  return(df)
})
```

Merge all the patients

```{r}
expr_matrix <- Reduce(function(x, y) merge(x, y, by = "Genes", all = TRUE), expr_list)
```

```{r}
expr_matrix <- expr_matrix[!expr_matrix$Genes %in% c("__alignment_not_unique",
                                                     "__ambiguous",
                                                     "__no_feature",
                                                     "__not_aligned",
                                                     "__too_low_aQual"), ]
dim(expr_matrix)
head(expr_matrix)
```

Keep only IDs common between RNA matrix and clinical data

```{r}
samples <- data.frame(PCSI.ID = colnames(expr_matrix))
clinical<-merge(clinical, samples, by="PCSI.ID")

samples <- intersect(colnames(expr_matrix), clinical$PCSI.ID)
expr_matrix <- expr_matrix[, c("Genes", samples), drop = FALSE]
```

Add genes annotation and names

```{r}
ensembl <- useMart("ensembl", dataset = "hsapiens_gene_ensembl")

mapping <- getBM(attributes = c("ensembl_gene_id", "hgnc_symbol"),
                 filters = "ensembl_gene_id",
                 values = expr_matrix$Genes,
                 mart = ensembl)

head(mapping)
matrix_annot<-merge(mapping, expr_matrix, by.y="Genes", by.x="ensembl_gene_id")
expr_matrix <- matrix_annot[, -1]
#rownames(expr_matrix) <- expr_matrix$hgnc_symbol
head(expr_matrix)
dim(expr_matrix)
```

```{r}
expr_matrix <- expr_matrix %>%
     filter(hgnc_symbol != "") # filter "" no genes names 
dim(expr_matrix)
```

Genes doublets, keep the genes with the more count

```{r}
expr_matrix <- expr_matrix %>%
  dplyr::rowwise() %>%
  dplyr::mutate(total_counts = sum(dplyr::c_across(-hgnc_symbol))) %>% # calculate the sum of count 
  dplyr::ungroup() %>%
  dplyr::arrange(hgnc_symbol, desc(total_counts)) %>% # order the doublets
  dplyr::distinct(hgnc_symbol, .keep_all = TRUE) %>%
  dplyr::select(-total_counts)
dim(expr_matrix)
```

Preprocessing: genes filtering

1- Filtering based on genes where the total number of reads across all samples

```{r}
expr_matrix<-as.data.frame(expr_matrix)
rownames(expr_matrix) <- expr_matrix$hgnc_symbol
expr_matrix <- expr_matrix[, -1] #Genes Id in rownames
expr_matrix_mat <- as.matrix(expr_matrix)

keep <- rowSums(expr_matrix_mat) > 5  # keep all genes where the total number of reads across all samples is greater than 5
table(keep, useNA="always") 
expr_filtered <- expr_matrix_mat[keep, ]

dim(expr_filtered) 
```

```{r}
saveRDS(expr_filtered, file = "expr_filtered.rds")
```

## Descriptive statistics

```{r}
total_counts <- colSums(expr_filtered)
summary(total_counts)

hist(total_counts, breaks = 50, main = "Total counts per sample",
     xlab = "Total counts", col = "steelblue")
boxplot(total_counts, main = "Total counts per sample")
```

Normalization and scaling

```{r}
vst_matrix <- vst(expr_filtered)
```

```{r}
#saveRDS(vst_matrix, file = "vst_matrix.rds")
```

Heatmap

```{r}
#top variable genes
topN <- 300
sel <- head(order(apply(vst_matrix,1,sd), decreasing = TRUE), topN)
mat_top <- vst_matrix[sel, ]
annot<-clinical[,c("PCSI.ID","Metastatic.Disease.","Moffitt.latest", "kras_subtype","gHRD","Gender")]
annot$gHRD <- ifelse(annot$gHRD %in% c("BRCA1(g)", "BRCA2(g)", "PALB2(g)"), 
                               "yes", 
                               annot$gHRD)
rownames(annot) <- annot$PCSI.ID
annot<-annot[,-1]
annot$Metastatic.Disease.<-tolower(annot$Metastatic.Disease.)


my_colors <- list(
  Gender = c(Female = "darkgreen", Male = "lightblue")
)
plot<-pheatmap(mat_top, scale = "row", show_rownames = FALSE, show_colnames = FALSE, annotation_col = annot, clustering_method = "complete", main="Heatmap of Top 300 Genes from RNA-seq Data", annotation_colors = my_colors)

ggsave("heatmap.jpeg", plot, width = 5000, height = 4000, units = "px")
```

PCA

```{r}
pca_result <- prcomp(t(vst_matrix), center = TRUE, scale. = FALSE)  
pca_data <- as.data.frame(pca_result$x)
pca_data$PatientID <- colnames(vst_matrix)
pca_data$Sex <- clinical$Gender
pca_data$Alive <- clinical$Alive.
pca_data$kras_mut <- clinical$KRAS_mut 
pca_data$kras_subtype <- clinical$kras_subtype
pca_data$response <- clinical$Best.response.1st.line
pca_data$Moffitt <- clinical$Moffitt.latest
pca_data$Metastatic <- clinical$Metastatic.Disease.
pca_data$Metastatic<-tolower(pca_data$Metastatic)
pca_data$Location <- clinical$Location.bx
pca_data$surgey <- clinical$Priory.curative.surgey.for.PDAC
pca_data$backbone <- clinical$First.Tx.Backbone
pca_data$best_response <- clinical$Best.Response
```

```{r}
var_explained <- (pca_result$sdev)^2 / sum(pca_result$sdev^2)*100

barplot(var_explained[1:50], main = "Explained Variance (%)",
        xlab = "Principal Component", ylab = "Explained Variance (%)",names.arg = 1:50,
        col = "skyblue")
```

```{r}
PC1=var_explained[1]
PC2=var_explained[2]
PC1
PC2

plot<-ggplot(pca_data, aes(x = PC1, y = PC2, color = kras_subtype, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA Bulk RNA-seq Data PDAC, KRAS subtype and Gender",
         x = "Principal Component 1 (8.33%)",
         y = "Principal Component 2 (4.46%)") +
    theme_minimal() +
    scale_color_manual(values = c("wt" = "blue", "minor" = "lightblue", "balanced"="yellow", "major"="red")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_kras_subtype.jpeg", plot, width = 3000, height = 2000, units = "px")
```

```{r}
ggplot(pca_data, aes(x = PC1, y = PC2, color = kras_mut, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA Bulk RNA-seq Data PDAC, KRAS mutation and Gender",
         x = "Principal Component 1 (8.33%)",
         y = "Principal Component 2 (4.46%)") +
    theme_minimal() +
    scale_color_manual(values = c("G12C" = "blue", "G12D" = "pink", "G12R"="yellow", "G12V"="red", "G12S"="grey","G13D"="darkgrey","Q61H"="darkgreen","Q61K"="orange", "Q61L"="lightblue","Q61R"="black")) +
    theme(legend.position = "top")
```

```{r}
plot<-ggplot(pca_data, aes(x = PC1, y = PC2, color = response, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA Bulk RNA-seq Data PDAC, Response and Gender",
         x = "Principal Component 1 (8.33%)",
         y = "Principal Component 2 (4.46%)") +
    theme_minimal() +
    scale_color_manual(values = c("CR" = "blue", "SD" ="pink", "PD"="red", "NE"="grey","missing"="black", "PR"="lightblue")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_response.jpeg", plot, width = 3000, height = 2000, units = "px")
```

```{r}
plot<-ggplot(pca_data, aes(x = PC1, y = PC2, color = best_response, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA Bulk RNA-seq Data PDAC, Response and Gender",
         x = "Principal Component 1 (8.33%)",
         y = "Principal Component 2 (4.46%)") +
    theme_minimal() +
    scale_color_manual(values = c("Response" = "blue", "No response"="red")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_best_response.jpeg", plot, width = 3000, height = 2000, units = "px")
```

```{r}
plot<-ggplot(pca_data, aes(x = PC1, y = PC2, color = surgey, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA Bulk RNA-seq Data PDAC, Response and Gender",
         x = "Principal Component 1 (8.33%)",
         y = "Principal Component 2 (4.46%)") +
    theme_minimal() +
    scale_color_manual(values = c("no" = "blue", "yes"="red")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_prior_surgey.jpeg", plot, width = 3000, height = 2000, units = "px")
```

```{r}
plot<-ggplot(pca_data, aes(x = PC1, y = PC2, color = Moffitt, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA Bulk RNA-seq Data PDAC, Moffitt (basal-like or classical) and Gender",
         x = "Principal Component 1 (8.33%)",
         y = "Principal Component 2 (4.46%)") +
    theme_minimal() +
    scale_color_manual(values = c("basal-like" = "blue", "classical"="red")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_moffitt.jpeg", plot, width = 3000, height = 2000, units = "px")
```

```{r}
plot<-ggplot(pca_data, aes(x = PC1, y = PC2, color = Metastatic, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA Bulk RNA-seq Data PDAC, Metastatic desease and Gender",
         x = "Principal Component 1 (8.33%)",
         y = "Principal Component 2 (4.46%)") +
    theme_minimal() +
    scale_color_manual(values = c("no" = "blue", "yes"="red")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_metastases.jpeg", plot, width = 3000, height = 2000, units = "px")
```

```{r}
plot<-ggplot(pca_data, aes(x = PC1, y = PC2, color = Location, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA Bulk RNA-seq Data PDAC, Location and Gender",
         x = "Principal Component 1 (8.33%)",
         y = "Principal Component 2 (4.46%)") +
    theme_minimal() +
    scale_color_manual(values = c("Pancreas" = "blue", "Adrenal gland" = "pink", "Omentum"="yellow", "Liver"="red", "Lymph Node(s) Supraclav"="grey","Abdominal wall"="darkgreen","Peritoneum"="orange", "Lung"="lightblue","Ovary"="black")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_loc.jpeg", plot, width = 3000, height = 2000, units = "px")
```

```{r}
ggplot(pca_data, aes(x = PC1, y = PC2, color = Alive, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA Bulk RNA-seq Data PDAC, Location and Gender",
         x = "Principal Component 1 (8.33%)",
         y = "Principal Component 2 (4.46%)") +
    theme_minimal() +
    scale_color_manual(values = c("Alive" = "blue", "Dead"="red")) +
    theme(legend.position = "top")


ggplot(pca_data, aes(x = PC1, y = PC2, color = backbone, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA Bulk RNA-seq Data PDAC, 1st backbone and Gender",
         x = "Principal Component 1 (8.33%)",
         y = "Principal Component 2 (4.46%)") +
    theme_minimal() +
    scale_color_manual(values = c("cis/gem" = "blue", "FFX" = "pink", "Gemcitabine"="red", "none"="grey","GA-gem"="darkgreen","GA"="orange", "FFX+5FU"="lightblue","FFX+olaparib"="black")) +
    theme(legend.position = "top")
```

PLS-DA

```{r}
clini<-clinical[,c("PCSI.ID","Metastatic.Disease.","Moffitt.latest", "kras_subtype","gHRD","Gender","Best.response.1st.line","Location.bx","Priory.curative.surgey.for.PDAC")]
clini$gHRD <- ifelse(clini$gHRD %in% c("BRCA1(g)", "BRCA2(g)", "PALB2(g)"), 
                               "yes", 
                               clini$gHRD)
rownames(clini) <- clini$PCSI.ID
clini<-clini[,-1]
clini$Metastatic.Disease.<-tolower(clini$Metastatic.Disease.)
```

```{r}
X <- t(vst_matrix)
Y <- clini$Moffitt.latest
result.plsda<- mixOmics::plsda(X, Y)
plotIndiv(result.plsda, legend = TRUE, ind.names = FALSE,
  title = "PLS-DA on bulk data in PDAC, Moffitt")

Y <- clini$kras_subtype
result.plsda<- mixOmics::plsda(X, Y)
plotIndiv(result.plsda, legend = TRUE, ind.names = FALSE,
  title = "PLS-DA on bulk data in PDAC, KRAS subtype")

Y <- clini$Gender
result.plsda<- mixOmics::plsda(X, Y)
plotIndiv(result.plsda, legend = TRUE, ind.names = FALSE,
  title = "PLS-DA on bulk data in PDAC, Gender")

Y <- clini$gHRD
result.plsda<- mixOmics::plsda(X, Y)
plotIndiv(result.plsda, legend = TRUE, ind.names = FALSE,
  title = "PLS-DA on bulk data in PDAC, gHRD")

Y <- clini$Location.bx
result.plsda<- mixOmics::plsda(X, Y)
plotIndiv(result.plsda, legend = TRUE, ind.names = FALSE,
  title = "PLS-DA on bulk data in PDAC, Location")

Y <- clini$Best.response.1st.line
result.plsda<- mixOmics::plsda(X, Y)
plotIndiv(result.plsda, legend = TRUE, ind.names = FALSE,
  title = "PLS-DA on bulk data in PDAC, Response")
```

```{r}
Y <- clini$Metastatic.Disease.
result.plsda<- mixOmics::plsda(X, Y)
plotIndiv(result.plsda, legend = TRUE, ind.names = FALSE,
  title = "PLS-DA on bulk data in PDAC, Metastatic disease")
```

Hierarchical clustering

```{r}
vst_matrix.scale=scale(vst_matrix)
vst_matrix.scale<-t(vst_matrix.scale)
vst_matrix.dist=dist(vst_matrix.scale)
res.hclust<-hclust(vst_matrix.dist)

png("dendrogram.png", width=2000, height=1500, res=300)
plot(res.hclust, main = "Cluster Dendrogram")
```

## Deconvolution

```{r}
#| include: false
deconv = compute.deconvolution(raw.counts = expr_filtered, 
                               methods = c("Quantiseq", "Epidish", 
                                           "DeconRNASeq", "DWLS","MOMF"), 
                               normalized = TRUE, 
                               return = TRUE, 
                               file_name = "Deconv_scie-panc")
```

```{r}
processed_deconvolution = compute.deconvolution.analysis(deconv, corr = 0.7, seed = 123, return = T, file_name="deconv_subsgroups")
```

```{r}
results<-read.table("Results/Deconvolution_after_subgrouping_deconv_subsgroups.csv",sep = ",",header=T)
rownames(results) <- results$X
results <- results[,-1]
results<-results[rownames(results) %in% clinical$PCSI.ID,]
```

```{r}
plot<-pheatmap(t(results), scale = "row",color = colorRampPalette(c("blue","white","red"))(100),breaks = seq(-4, 4, length.out = 101), show_rownames = TRUE, show_colnames = FALSE, clustering_method = "complete", main="Heatmap Deconvolution", annotation_col = clinical.data[,c(-2,-4,-6,-19,-28)], annotation_legend = FALSE)
plot
ggsave("Plots/deconv.jpeg", plot, width = 6000, height = 4000, units = "px")
```

```{r}
clinical.data<-clinical
clinical.data$Sum.Diameter <- as.numeric(clinical.data$Sum.Diameter)
clinical.data$Best.tumor.response <- as.numeric(clinical.data$Best.tumor.response)
clinical.data$Ca.19.9.Value.baseline <- as.numeric(clinical.data$Ca.19.9.Value.baseline)
rownames(clinical.data)<-clinical.data$PCSI.ID
clinical.data<-clinical.data[,c(-1,-2)]
deconv.metadata<-metada.association(results, clinical.data, width = 12, height = 30)
```

```{r}
plot_mat <- t(deconv.metadata)
df_long <- melt(plot_mat, varnames = c("Clinical", "Celltype"), value.name = "Correlation")

# Heatmap ggplot
plot<-ggplot(df_long, aes(x = Celltype, y = Clinical, fill = Correlation)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", 
                       na.value = "grey80",  # NA in grey
                       midpoint = 0, limits = c(-1,1)) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
        axis.text.y = element_text(size = 12),
        plot.title = element_text(hjust = 0.5, size = 16)) +
  labs(title = "Clinical associations with cell types\nOnly showing significant associations (pvalue < 0.05)",
       x = "Cell types proportion", y = "Clinical data", fill = "Corr")
plot

ggsave("Plots/deconv_corr.jpeg", plot, width = 8000, height = 3000, units = "px")
```

```{r}
mat_filled <- t(deconv.metadata)
mat_filled[is.na(mat_filled)] <- 0  

# Clustering (rows)
dist_rows <- dist(mat_filled)  
clust_rows <- hclust(dist_rows, method = "ward.D2")

# Clustering (columns)
#dist_cols <- dist(t(mat_filled))
#clust_cols <- hclust(dist_cols, method = "ward.D2")

# Heatmap with dendrogrammes
plot<-pheatmap(t(deconv.metadata), 
         cluster_rows = clust_rows,
         cluster_cols = FALSE,
         color = colorRampPalette(c("blue","white","red"))(100),
         na_col = "grey90", angle_col = "315", main="Clinical associations with cell types only showing significant associations (pvalue < 0.05)")
plot
ggsave("Plots/deconv_corr.jpeg", plot, width = 8000, height = 3000, units = "px")
```

Focus on response, prior surgey and deconvolution grouped by cell types

```{r}
# change the group response
# CR+PR vs SD+PD
focus.clinical<-clinical
rownames(focus.clinical)<-focus.clinical$PCSI.ID
focus.clinical<-focus.clinical[,c("Priory.curative.surgey.for.PDAC","Best.response.1st.line", "Best.tumor.response", "survival.days", "hrdetect_score")]
focus.clinical$Best.Response<-ifelse(focus.clinical$Best.response.1st.line == "CR"|focus.clinical$Best.response.1st.line == "PR", "Response", "No response")
focus.clinical<-focus.clinical[,-2]
focus.clinical$Best.tumor.response <- as.numeric(focus.clinical$Best.tumor.response)
deconv.metadata<-metada.association(results, focus.clinical, width = 12, height = 30)
```

```{r}
mat_filled <- t(deconv.metadata)
mat_filled[is.na(mat_filled)] <- 0  

# Clustering (rows)
dist_rows <- dist(mat_filled)  
clust_rows <- hclust(dist_rows, method = "ward.D2")

# Clustering (columns)
#dist_cols <- dist(t(mat_filled))
#clust_cols <- hclust(dist_cols, method = "ward.D2")

# Heatmap with dendrogrammes
plot<-pheatmap(t(deconv.metadata), 
         cluster_rows = clust_rows,
         cluster_cols = FALSE,
         color = colorRampPalette(c("blue","white","red"))(100),
         na_col = "grey90", angle_col = "315", main="Clinical associations with cell types only showing significant associations (pvalue < 0.05)")
plot
ggsave("Plots/deconv_corr_bis.jpeg", plot, width = 8000, height = 2000, units = "px")
```

PCA

```{r}
pca_results <- prcomp(results, scale.=TRUE)

pca_deconv <- as.data.frame(pca_results$x)
pca_deconv$PatientID <- colnames(vst_matrix)
pca_deconv$Sex <- clinical$Gender
pca_deconv$Alive <- clinical$Alive.
pca_deconv$kras_mut <- clinical$KRAS_mut 
pca_deconv$kras_subtype <- clinical$kras_subtype
pca_deconv$response <- clinical$Best.response.1st.line
pca_deconv$Moffitt <- clinical$Moffitt.latest
pca_deconv$Metastatic <- clinical$Metastatic.Disease.
pca_deconv$Location <- clinical$Location.bx
pca_deconv$gHRD <- clinical$gHRD
pca_deconv$ECOG <- clinical$ECOG
pca_deconv$best.response <- clinical$Best.Response
pca_deconv$prior.surgery <- clinical$Priory.curative.surgey.for.PDAC
pca_deconv$ECOG <- as.character(pca_deconv$ECOG)
```

```{r}
var_explained <- (pca_results$sdev)^2 / sum(pca_results$sdev^2)*100

barplot(var_explained[1:50], main = "Explained Variance (%)",
        xlab = "Principal Component", ylab = "Explained Variance (%) on the deconvolution features",names.arg = 1:50,
        col = "skyblue")

PC1=var_explained[1]
PC2=var_explained[2]
PC1
PC2

ggplot(pca_deconv, aes(x = PC1, y = PC2, color = ECOG, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA on deconvolution features, ECOG and Gender",
         x = "Principal Component 1 (11.25%)",
         y = "Principal Component 2 (8.19%)") +
    theme_minimal() +
    scale_color_manual(values = c("0" = "blue", "1" = "red")) +
    theme(legend.position = "top")

ggplot(pca_deconv, aes(x = PC1, y = PC2, color = response, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA on deconvolution features, Response and Gender",
         x = "Principal Component 1 (11.25%)",
         y = "Principal Component 2 (8.19%)") +
    theme_minimal() +
    scale_color_manual(values = c("CR" = "blue", "SD" ="pink", "PD"="red", "NE"="grey","missing"="black", "PR"="lightblue")) +
    theme(legend.position = "top")

plot<-ggplot(pca_deconv, aes(x = PC1, y = PC2, color = best.response, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA on deconvolution features, Response and Gender",
         x = "Principal Component 1 (11.25%)",
         y = "Principal Component 2 (8.19%)") +
    theme_minimal() +
    scale_color_manual(values = c("Response" = "blue", "No response"="red")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_deconv_response.jpeg", plot, width = 3000, height = 2000, units = "px")

plot<-ggplot(pca_deconv, aes(x = PC1, y = PC2, color = prior.surgery, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA on deconvolution features, Prior curative surgery and Gender",
         x = "Principal Component 1 (11.25%)",
         y = "Principal Component 2 (8.19%)") +
    theme_minimal() +
    scale_color_manual(values = c("no" = "blue", "yes"="red")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_deconv_surgery.jpeg", plot, width = 3000, height = 2000, units = "px")
```

Clusters related to clinical data

3 clusters based on deconvolution results

```{r}
results
cluster_kmeans<-kmeans(deconv, centers=3)
cluster<-cluster_kmeans$cluster
cluster<-as.data.frame(cluster)

clinical.data$ID <- rownames(clinical.data)
cluster$ID <- rownames(cluster)
clinical.data <- merge(clinical.data, cluster, by = "ID")
rownames(clinical.data)<-clinical.data$ID
clinical.data<-clinical.data[,-1]
```

ANOVA for continuous variables and Fisher for qualitative variables

```{r}
clinical.data$Sum.Diameter <- as.numeric(clinical.data$Sum.Diameter)
clinical.data$Best.tumor.response <- as.numeric(clinical.data$Best.tumor.response)
clinical.data$Ca.19.9.Value.baseline <- as.numeric(clinical.data$Ca.19.9.Value.baseline)

cluster.metadata<-perform_statistical_tests(clinical.data, cluster_col="cluster")

p1<-ggplot(clinical.data, aes(x = cluster, fill = Moffitt.latest)) +
  geom_bar(position = "fill") +
  ylab("Proportion")+xlab("Moffit")

p2<-ggplot(clinical.data, aes(x = cluster, fill = liver.mets.at.dx)) +
  geom_bar(position = "fill") +
  xlab("Proportion")+ylab(" ")

p3<-ggplot(clinical.data, aes(x = cluster, fill = Metastatic.Disease.)) +
  geom_bar(position = "fill") +
  xlab("Metastatic disease")+ylab(" ")

p4<-ggplot(clinical.data, aes(x = cluster, fill = Location.bx)) +
  geom_bar(position = "fill") +
  xlab("Location")+ylab(" ")

p5<-ggplot(clinical.data, aes(x = cluster, fill = KRAS_mut)) +
  geom_bar(position = "fill") +
  xlab("KRAS mutation")+ylab(" ")

p6<-ggplot(clinical.data, aes(x = cluster, fill = Alive.)) +
  geom_bar(position = "fill") +
  xlab("Survival")+ylab(" ")

plot<-(p1 + p2 + p3) / (p4 + p5 + p6) +
  plot_layout(guides = "collect") + 
  plot_annotation(
    title = "Clinical association with the deconvolution clusters, showing only significant association (pvalue < 0.05)",
    theme = theme(plot.title = element_text(size = 14, hjust = 0.5))
  ) & 
  guides(color = guide_legend(ncol = 2))
ggsave("Plots/cluster_corr.jpeg", plot, width = 5000, height = 3500, units = "px")
```

## Gene regulatory network inference

```{r}
write.table(vst_matrix, file = "matrix_vst.txt", sep = "\t", quote = FALSE, row.names = TRUE, col.names = NA)
```

ARACNe (in Unix)

```{bash}
wget https://humantfs.ccbr.utoronto.ca/download/v_1.01/TF_names_v_1.01.txt

java -Xmx5G -jar ARACNe-AP/dist/aracne.jar -e matrix_vst.txt  -o outputFolder --tfs TF_list.txt --pvalue 1E-8 --seed 1 \
--calculateThreshold

for i in {1..100}
do
java -Xmx5G -jar ARACNe-AP/dist/aracne.jar -e matrix_vst.txt -o outputFolder --tfs TF_names_v_1.01.txt --pvalue 1E-8 --seed $i
done

java -Xmx5G -jar ARACNe-AP/dist/aracne.jar -o outputFolder --consolidate
```

Vizualise the network

```{r}
network<-read.table("network.txt", header=TRUE)
```

```{r}
top_edges <- network[order(network$MI, decreasing = TRUE), ][1:200, ]
g <- graph_from_data_frame(d = top_edges[, c("Regulator", "Target")], directed = TRUE)

all_regulators <- unique(top_edges$Regulator)
all_targets <- unique(top_edges$Target)

both_nodes <- intersect(all_regulators, all_targets)

E(g)$MI <- top_edges$MI

V(g)$type <- case_when(
  V(g)$name %in% both_nodes ~ "Both",
  V(g)$name %in% all_regulators ~ "Regulator",
  V(g)$name %in% all_targets ~ "Target",
  TRUE ~ "Other"
)

plot<-ggraph(g, layout = "fr") +
  geom_edge_link0(aes(edge_width = MI), alpha = 0.6, edge_colour = "grey") +
  geom_node_point(aes(color = type), size = 5, show.legend = TRUE) +
  geom_node_text(aes(label = name), repel = TRUE, size = 3) +
  scale_color_manual(values = c("Regulator" = "orange", "Target" = "blue", "Both" = "purple", "Other"= "grey")) +
  scale_edge_width(name = "MI") +
  guides(edge_width = guide_legend(override.aes = list(linetype = 1, shape = NA))) + 
  theme_void() + ggtitle("ARACNE network for PADC data, orange = regulators, blue = targets and purple= both")
plot

ggsave("network.jpeg", plot, width = 5000, height = 4000, units = "px")
```

## Proteins activity inference

Viper

```{r}
# Conversion the network in regulon
regulon <- aracne2regulon("network.txt", vst_matrix)

# VIPER
viper_activity <- viper(vst_matrix, regulon, verbose = FALSE)
```

```{r}
samples <- intersect(colnames(viper_activity), clinical$PCSI.ID)
viper_activity <- viper_activity[, samples, drop = FALSE]

pca_viper <- prcomp(t(viper_activity), scale.=TRUE)

pca_prot <- as.data.frame(pca_viper$x)
pca_prot$PatientID <- colnames(vst_matrix)
pca_prot$Sex <- clinical$Gender
pca_prot$Alive <- clinical$Alive.
pca_prot$kras_mut <- clinical$KRAS_mut 
pca_prot$kras_subtype <- clinical$kras_subtype
pca_prot$response <- clinical$Best.response.1st.line
pca_prot$Moffitt <- clinical$Moffitt.latest
pca_prot$Metastatic <- clinical$Metastatic.Disease.
pca_prot$Location <- clinical$Location.bx
pca_prot$best.response <- clinical$Best.Response
pca_prot$prior.surgery <- clinical$Priory.curative.surgey.for.PDAC
pca_prot$gHRD <- clinical$gHRD
```

```{r}
var_explained <- (pca_viper$sdev)^2 / sum(pca_viper$sdev^2)*100

barplot(var_explained[1:50], main = "Explained Variance (%)",
        xlab = "Principal Component", ylab = "Explained Variance (%) on the proteins activity",names.arg = 1:50,
        col = "skyblue")

PC1=var_explained[1]
PC2=var_explained[2]
PC1
PC2
```

```{r}
plot<-ggplot(pca_prot, aes(x = PC1, y = PC2, color = Metastatic, shape = Moffitt)) +
    geom_point(size = 3) +
    labs(title = "PCA proteins activity, Metastatic disease and Moffitt",
         x = "Principal Component 1 (24.3%)",
         y = "Principal Component 2 (14.3%)") +
    theme_minimal() +
    scale_color_manual(values = c("no" = "blue", "yes"="red")) +
    theme(legend.position = "top")
plot
ggsave("pca_prot_metaxmoffitt.jpeg", plot, width = 3000, height = 2000, units = "px")
```

```{r}
plot<-ggplot(pca_prot, aes(x = PC1, y = PC2, color = gHRD, shape = Moffitt)) +
    geom_point(size = 3) +
    labs(title = "PCA proteins activity, gHRD and Moffitt",
         x = "Principal Component 1 (24.3%)",
         y = "Principal Component 2 (14.3%)") +
    theme_minimal() +
    scale_color_manual(values = c("no" = "blue", "yes"="red")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_prot_metaxmoffitt.jpeg", plot, width = 3000, height = 2000, units = "px")

plot<-ggplot(pca_prot, aes(x = PC1, y = PC2, color = best.response, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA proteins activity, Response",
         x = "Principal Component 1 (24.3%)",
         y = "Principal Component 2 (14.3%)") +
    theme_minimal() +
    scale_color_manual(values = c("Response" = "blue", "No response"="red")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_prot_response.jpeg", plot, width = 3000, height = 2000, units = "px")

plot<-ggplot(pca_prot, aes(x = PC1, y = PC2, color = prior.surgery, shape = Sex)) +
    geom_point(size = 3) +
    labs(title = "PCA proteins activity, Prior curative surgery",
         x = "Principal Component 1 (24.3%)",
         y = "Principal Component 2 (14.3%)") +
    theme_minimal() +
    scale_color_manual(values = c("no" = "blue", "yes"="red")) +
    theme(legend.position = "top")
plot
ggsave("Plots/pca_prot_surgery.jpeg", plot, width = 3000, height = 2000, units = "px")
```

Heatmap

```{r}
var_genes <- head(order(apply(viper_activity, 1, var), decreasing=TRUE), 100)

my_colors <- list(
  Gender = c(Female = "darkgreen", Male = "lightblue")
)
plot<-pheatmap(viper_activity[var_genes, ], scale = "row", show_rownames = TRUE, show_colnames = FALSE, annotation_col = annot, clustering_method = "complete", main="Heatmap of proteins activity on top 100", annotation_colors = my_colors)
plot

ggsave("heatmap_TF_top100.jpeg", plot, width = 5000, height = 4000, units = "px")
```

```{r}
my_colors <- list(
  Gender = c(Female = "darkgreen", Male = "lightblue")
)
plot<-pheatmap(viper_activity, scale = "row", show_rownames = FALSE, show_colnames = FALSE, annotation_col = annot, clustering_method = "complete", main="Heatmap of proteins activity", annotation_colors = my_colors)
plot

ggsave("heatmap_TF.jpeg", plot, width = 5000, height = 4000, units = "px")
```

## Differential genes expression

#### Moffitt

```{r}
dds <- DESeqDataSetFromMatrix(
  countData = expr_filtered,
  colData = clinical,
  design = ~ Moffitt.latest
)
```

```{r}
#| include: false
dds <- DESeq(dds)
res <- results(dds, contrast=c("Moffitt.latest", "basal-like", "classical"))
res <- lfcShrink(dds, coef="Moffitt.latest_classical_vs_basal.like", type="apeglm")
res <- as.data.frame(res)
res$FDR <- p.adjust(res$pvalue, method="BH")
```

```{r}
res$Significant <- "No"
res$Significant[res$FDR < 0.05 & res$log2FoldChange > 1] <- "Up"
res$Significant[res$FDR < 0.05 & res$log2FoldChange < -1] <- "Down"
#top_genes <- res[order(res$padj), ][1:20, ]
#top_genes$gene<-rownames(top_genes)
res$gene <- rownames(res)
res_up   <- res[res$log2FoldChange > 0, ]
res_down <- res[res$log2FoldChange < 0, ]
top_up   <- head(res_up[order(res_up$padj), ], 20)
top_down <- head(res_down[order(res_down$padj), ], 20)
top_genes <- rbind(top_up, top_down)

plot<-ggplot(res, aes(x=log2FoldChange, y=-log10(FDR), color=Significant)) +
  geom_point(alpha=0.5) +
  scale_color_manual(values=c("darkblue","grey","red")) +
    geom_text_repel(data = top_genes, aes(label = gene), box.padding = 0.5, max.overlaps = Inf, size = 3) +
  theme_minimal() +
  xlab("Log2 Fold Change") +
  ylab("-Log10 FDR") +
  ggtitle("Volcano Plot basal-like vs classical subtype")
plot
ggsave("Plots/volcano_moffitt.jpeg", plot, width = 4000, height = 3000, units = "px")
```

GO

```{r}
genes<-rownames(res[res$log2FoldChange>0.5,])
Go_results<-enrichGO(gene=genes, OrgDb="org.Hs.eg.db", keyType= "SYMBOL", ont="BP")
as.data.frame(Go_results)
plot<-plot(barplot(Go_results, showCategory=20))+ggtitle("GO Enrichment Analysis of basal-like vs classical subtype")
plot
ggsave("Plots/GO.jpeg", plot, width = 4000, height = 3000, units = "px")
```

#### Response

```{r}
#| include: false
clinical$Best.Response <- factor(clinical$Best.Response)
dds <- DESeqDataSetFromMatrix(
  countData = expr_filtered,
  colData = clinical,
  design = ~ Best.Response
)
dds <- DESeq(dds)
res <- results(dds, contrast=c("Best.Response", "Response", "No response"))
res <- lfcShrink(dds, coef="Best.Response_Response_vs_No.response", type="apeglm")
res <- as.data.frame(res)
res$FDR <- p.adjust(res$pvalue, method="BH")
```

```{r}
res$Significant <- "No"
res$Significant[res$FDR < 0.05 & res$log2FoldChange > 1] <- "Up"
res$Significant[res$FDR < 0.05 & res$log2FoldChange < -1] <- "Down"
#top_genes <- res[order(res$padj), ][1:20, ]
#top_genes$gene<-rownames(top_genes)
res$gene <- rownames(res)
res_up   <- res[res$log2FoldChange > 0, ]
res_down <- res[res$log2FoldChange < 0, ]
top_up   <- head(res_up[order(res_up$padj), ], 20)
top_down <- head(res_down[order(res_down$padj), ], 20)
top_genes <- rbind(top_up, top_down)

plot<-ggplot(res, aes(x=log2FoldChange, y=-log10(FDR), color=Significant)) +
  geom_point(alpha=0.5) +
  scale_color_manual(values=c("darkblue","grey","red")) +
    geom_text_repel(data = top_genes, aes(label = gene), box.padding = 0.5, max.overlaps = Inf, size = 3) +
  theme_minimal() +
  xlab("Log2 Fold Change") +
  ylab("-Log10 FDR") +
  ggtitle("Volcano Plot response vs no response")
plot
ggsave("Plots/volcano_best-response.jpeg", plot, width = 4000, height = 3000, units = "px")
```

GO

```{r}
genes<-rownames(res[res$log2FoldChange>0.5,])
Go_results<-enrichGO(gene=genes, OrgDb="org.Hs.eg.db", keyType= "SYMBOL", ont="BP")
as.data.frame(Go_results)
plot<-plot(barplot(Go_results, showCategory=20))+ggtitle("GO Enrichment Analysis of response vs no response")
plot
ggsave("Plots/GO_response.jpeg", plot, width = 4000, height = 3000, units = "px")
```

#### Prior surgey

```{r}
#| include: false
dds <- DESeqDataSetFromMatrix(
  countData = expr_filtered,
  colData = clinical,
  design = ~ Priory.curative.surgey.for.PDAC
)
dds <- DESeq(dds)
res <- results(dds, contrast=c("Priory.curative.surgey.for.PDAC", "yes", "no"))
res <- lfcShrink(dds, coef="Priory.curative.surgey.for.PDAC_yes_vs_no", type="apeglm")
res <- as.data.frame(res)
res$FDR <- p.adjust(res$pvalue, method="BH")
```

```{r}
res$Significant <- "No"
res$Significant[res$FDR < 0.05 & res$log2FoldChange > 1] <- "Up"
res$Significant[res$FDR < 0.05 & res$log2FoldChange < -1] <- "Down"
#top_genes <- res[order(res$padj), ][1:20, ]
#top_genes$gene<-rownames(top_genes)
res$gene <- rownames(res)
res_up   <- res[res$log2FoldChange > 0, ]
res_down <- res[res$log2FoldChange < 0, ]
top_up   <- head(res_up[order(res_up$padj), ], 20)
top_down <- head(res_down[order(res_down$padj), ], 20)
top_genes <- rbind(top_up, top_down)

plot<-ggplot(res, aes(x=log2FoldChange, y=-log10(FDR), color=Significant)) +
  geom_point(alpha=0.5) +
  scale_color_manual(values=c("darkblue","grey","red")) +
    geom_text_repel(data = top_genes, aes(label = gene), box.padding = 0.5, max.overlaps = Inf, size = 3) +
  theme_minimal() +
  xlab("Log2 Fold Change") +
  ylab("-Log10 FDR") +
  ggtitle("Volcano Plot prior curative surgery vs not")
plot
ggsave("Plots/volcano_surgey.jpeg", plot, width = 4000, height = 3000, units = "px")
```

GO

```{r}
genes<-rownames(res[res$log2FoldChange>0.5,])
Go_results<-enrichGO(gene=genes, OrgDb="org.Hs.eg.db", keyType= "SYMBOL", ont="BP")
as.data.frame(Go_results)
plot<-plot(barplot(Go_results, showCategory=20))+ggtitle("GO Enrichment Analysis of prior curative surgery vs not")
plot
ggsave("Plots/GO_surgey.jpeg", plot, width = 4000, height = 4000, units = "px")
```

#### 

## CellTFusion

```{r}
#| include: false
clinical.data<-clinical
rownames(clinical.data)<-clinical.data$PCSI.ID
clinical.data<-clinical.data[,c(-1,-2,-3,-4,-5,-6,-8,-11,-12,-13,-17,-18,-19,-20,-21,-23,-27)]
clinical.data$Best.Response <- factor(clinical.data$Best.Response)
clinical.data$Best.Response <- relevel(clinical.data$Best.Response, ref = "Response")
clinical.data$Best.response.1st.line <- factor(clinical.data$Best.response.1st.line, level=c("CR","PR","SD","PD"))

res <- CellTFusion(
  raw.counts = expr_filtered,
  normalized = TRUE,
  coldata = clinical.data, 
  deconv_methods = c("Quantiseq", "Epidish", "DeconRNASeq", "DWLS"), 
  file_name = "Scie-panc",
  corr = 0.7,
  pval = 0.05,
  high_corr_groups = 0.85,
  return = FALSE
)
```

```{r}
# We first normalize by log2(TPM + 1)
counts.norm = data.frame(ADImpute::NormalizeTPM(expr_filtered, log = T)) 
tfs = compute.TFs.activity(counts.norm, TF.collection = "CollecTRI")
network = compute.WTCNA(tfs, corr_mod = 0.8, clustering.method = "ward.D2", return = T) 
compute.metada.association(network[[1]], clinical.data, pval = 0.05, width = 10) 
pathways = compute.pathway.activity(counts.norm)
compute.modules.relationship(network[[1]], pathways, "Pathways_Progeny-TFs_Modules", width = 15)
hub_tfs = identify_hub_TFs(t(tfs), network, MM_thresh = 0.8, degree_thresh = 0.9)
compute.modules.enrichment(counts.norm, hub_tfs)
dt = multideconv::compute.deconvolution.analysis(deconv, corr = 0.7, seed = 123) 

#Association of TFs modules with deconvolution 
compute.modules.relationship(network[[1]], dt[[1]], "Deconvolution-TFs_Modules", vertical = T, height = 30, width = 10, pval = 0.05)
cell_groups = construct_cell_groups(counts.norm, tfs, deconv, network, dt, pval = 0.05)
```

```{r}
#| include: false
clinical.data<-clinical
rownames(clinical.data)<-clinical.data$PCSI.ID
clinical.data<-clinical.data[,c(-1,-2,-3,-4,-5,-6,-8,-11,-12,-13,-17,-18,-19,-20,-21,-23,-27)]
clinical.data$Best.Response<-ifelse(clinical.data$Best.response.1st.line == "CR"|clinical.data$Best.response.1st.line == "PR", "Response", "No response")
clinical.data$Best.Response <- factor(clinical.data$Best.Response)
clinical.data$Best.Response <- relevel(clinical.data$Best.Response, ref = "Response")
clinical.data$Best.response.1st.line <- factor(clinical.data$Best.response.1st.line, level=c("CR","PR","SD","PD"))

res <- CellTFusion(
  raw.counts = expr_filtered,
  normalized = TRUE,
  coldata = clinical.data, 
  deconv_methods = c("Quantiseq", "Epidish", "DeconRNASeq", "DWLS"), 
  file_name = "Scie-panc",
  corr = 0.7,
  pval = 0.05,
  high_corr_groups = 0.85,
  return = FALSE
)
```

```{r}
# We first normalize by log2(TPM + 1)
counts.norm = data.frame(ADImpute::NormalizeTPM(expr_filtered, log = T)) 
tfs = compute.TFs.activity(counts.norm, TF.collection = "CollecTRI")
network = compute.WTCNA(tfs, corr_mod = 0.8, clustering.method = "ward.D2", return = T) 
compute.metada.association(network[[1]], clinical.data, pval = 0.05, width = 10) 
pathways = compute.pathway.activity(counts.norm)
compute.modules.relationship(network[[1]], pathways, "Pathways_Progeny-TFs_Modules", width = 15)
hub_tfs = identify_hub_TFs(t(tfs), network, MM_thresh = 0.8, degree_thresh = 0.9)
compute.modules.enrichment(counts.norm, hub_tfs)
dt = multideconv::compute.deconvolution.analysis(deconv, corr = 0.7, seed = 123) 

#Association of TFs modules with deconvolution 
compute.modules.relationship(network[[1]], dt[[1]], "Deconvolution-TFs_Modules", vertical = T, height = 30, width = 10, pval = 0.05)
cell_groups = construct_cell_groups(counts.norm, tfs, deconv, network, dt, pval = 0.05)
```

```{r}
res_fisher = cell.groups.fisher.test(cell_groups, clinical.data, "Best.response.1st.line", pval = 0.01)
res_fisher = cell.groups.fisher.test(cell_groups, clinical.data, "Best.Response", pval = 0.01)
res_anova = cell.groups.anova.test(cell_groups, clinical.data, "Best.tumor.response", pval = 0.01)
```

Compute relationship between deconvolution and TF module choosing some cell types

```{r}
# Only immune cells 
# Lymphoid lineage
dt.lymp<-dt[[1]]
cols_to_keep <- grep("B\\.cells|B.naive|B.memory|NK|CD8|CD4|T.cells|Plasma", colnames(dt.lymp), value = TRUE)
dt.lymp <- dt.lymp[, cols_to_keep]
relationship.lymp<-compute.modules.relationship(network[[1]], dt.lymp, "Deconvolution(lymph)-TFs_Modules", vertical = T, height = 15, width = 15, pval = 0.05, return=T)
plot_heatmap(relationship.lymp, width = 12, height = 12, lineage="lymphoid")
```

```{r}
# Myeloid lineage
dt.myel<-dt[[1]]
cols_to_keep <- grep("Mast|Neutrophils|Eosinophils|Monocytes|Basophils|Macrophages", colnames(dt.myel), value = TRUE)
dt.myel <- dt.myel[, cols_to_keep]
relationship.myel<-compute.modules.relationship(network[[1]], dt.myel, "Deconvolution(lymph)-TFs_Modules", vertical = T, height = 15, width = 15, pval = 0.05, return=T)
plot_heatmap(relationship.myel, width = 12, height = 12)
```
